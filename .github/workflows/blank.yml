name: CI

on:
  push:
    branches:
      - "main"  # Este flujo de trabajo se ejecutará solo cuando haya un push a la rama main

jobs:
  build:
    env:
      platform: aws
      region: us-east-1
      account: 123456789012
      username: ${{ secrets.USERNAME }}  # Utiliza el secreto USERNAME
      password: ${{ secrets.PASSWORD }}  # Utiliza el secreto PASSWORD
      PROJECT_VERSION: '1.0.0'  # Versión del proyecto

    runs-on: ubuntu-latest  # Utilizamos el runner de Ubuntu
    
    steps:
    # Paso 1: Checkout del código
    - name: "Checkout code"
      uses: actions/checkout@v2

    # Paso 2: Configurar Docker
    - name: "Set up Docker"
      uses: docker/setup-buildx-action@v1

    # Paso 3: Construir la imagen Docker
    - name: "Build Docker image"
      run: |
        docker build -t myapp:${{ env.PROJECT_VERSION }} .

    # Paso 4: Ejecutar pruebas dentro del contenedor Docker
    - name: "Run tests inside Docker container"
      run: |
        docker run --rm myapp:${{ env.PROJECT_VERSION }} vendor/bin/phpunit --coverage-text

    # Paso 5: Mostrar variables de entorno
    - name: "Mostrar variables de entorno"
      run: |
        echo "Esto es el valor de platform: ${{ env.platform }}"
        echo "Esto es el valor de region: ${{ env.region }}"
        echo "Esto es el valor de account: ${{ env.account }}"
        echo "Esto es el valor de username: ${{ env.username }}"
        echo "Esto es el valor de password: ${{ env.password }}"
        echo "Project version: ${{ env.PROJECT_VERSION }}"

    # Paso 6: Validación de usuario y contraseña
    - name: "Mostrando valores solo si el usuario es correcto"
      if: ${{ env.username != '' && env.password != '' }}
      run: |
        echo "El usuario y la contraseña son correctos" 

    # Paso 7: Mostrar valores por defecto
    - name: "Mostrando variables por defecto"
      run: |
        echo "Evento: ${{ toJSON(github.event) }}"
        echo "GITHUB_ACTOR: $GITHUB_ACTOR"
        echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"

    # Paso 8: Despliegue al servidor utilizando Docker
    - name: "Deploy to server using Docker"
      run: |
        echo "Desplegando aplicación al servidor..."
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} user@your-server "docker pull myapp:${{ env.PROJECT_VERSION }} && docker run -d myapp:${{ env.PROJECT_VERSION }}"

      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
